$date
	Fri Oct 20 15:38:01 2023
$end
$version
	Icarus Verilog
$end
$timescale
	10ps
$end
$scope module mux2_4_tb $end
$var wire 4 ! test_out [3:0] $end
$var reg 4 " test_a [3:0] $end
$var reg 4 # test_b [3:0] $end
$var reg 1 $ test_s $end
$scope module mux2_4_1_ $end
$var wire 4 % A [3:0] $end
$var wire 4 & B [3:0] $end
$var wire 1 $ s $end
$var wire 1 ' mux4_out $end
$var wire 1 ( mux3_out $end
$var wire 1 ) mux2_out $end
$var wire 1 * mux1_out $end
$var wire 4 + Out [3:0] $end
$scope module mux_1 $end
$var wire 1 , a $end
$var wire 1 - b $end
$var wire 1 $ s $end
$var reg 1 * out $end
$upscope $end
$scope module mux_2 $end
$var wire 1 . a $end
$var wire 1 / b $end
$var wire 1 $ s $end
$var reg 1 ) out $end
$upscope $end
$scope module mux_3 $end
$var wire 1 0 a $end
$var wire 1 1 b $end
$var wire 1 $ s $end
$var reg 1 ( out $end
$upscope $end
$scope module mux_4 $end
$var wire 1 2 a $end
$var wire 1 3 b $end
$var wire 1 $ s $end
$var reg 1 ' out $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
03
02
01
00
0/
0.
1-
0,
b0 +
0*
0)
0(
0'
b1 &
b0 %
0$
b1 #
b0 "
b0 !
$end
#1000
b1000 !
b1000 +
1*
1$
#2000
0-
1/
1,
0$
b10 #
b10 &
b1 "
b1 %
#3000
0*
b100 !
b100 +
1)
1$
#4000
