$date
	Sun Oct 22 14:42:31 2023
$end
$version
	Icarus Verilog
$end
$timescale
	10ps
$end
$scope module compl1_tb $end
$var wire 4 ! test_out [3:0] $end
$var reg 1 " test_cpl $end
$var reg 4 # test_inp [3:0] $end
$scope module compl1_1 $end
$var wire 4 $ Inp [3:0] $end
$var wire 1 " cpl $end
$var wire 4 % temp [3:0] $end
$var wire 4 & Out [3:0] $end
$scope module mux1 $end
$var wire 4 ' A [3:0] $end
$var wire 4 ( B [3:0] $end
$var wire 1 " s $end
$var wire 1 ) mux4_out $end
$var wire 1 * mux3_out $end
$var wire 1 + mux2_out $end
$var wire 1 , mux1_out $end
$var wire 4 - Out [3:0] $end
$scope module mux_1 $end
$var wire 1 . a $end
$var wire 1 / b $end
$var wire 1 " s $end
$var reg 1 , out $end
$upscope $end
$scope module mux_2 $end
$var wire 1 0 a $end
$var wire 1 1 b $end
$var wire 1 " s $end
$var reg 1 + out $end
$upscope $end
$scope module mux_3 $end
$var wire 1 2 a $end
$var wire 1 3 b $end
$var wire 1 " s $end
$var reg 1 * out $end
$upscope $end
$scope module mux_4 $end
$var wire 1 4 a $end
$var wire 1 5 b $end
$var wire 1 " s $end
$var reg 1 ) out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
15
04
13
02
11
00
1/
0.
b0 -
0,
0+
0*
0)
b1111 (
b0 '
b0 &
b1111 %
b0 $
b0 #
0"
b0 !
$end
#2000
0/
b1110 %
b1110 (
b1 !
b1 &
b1 -
1,
1.
b1 #
b1 $
b1 '
0"
#4000
0,
1+
1*
b1110 !
b1110 &
b1110 -
1)
1"
#6000
1/
01
b1101 %
b1101 (
0*
b10 !
b10 &
b10 -
0)
0.
10
0"
b10 #
b10 $
b10 '
#8000
1,
0+
1*
b1101 !
b1101 &
b1101 -
1)
1"
#10000
0/
b1100 %
b1100 (
1+
0*
b11 !
b11 &
b11 -
0)
1.
0"
b11 #
b11 $
b11 '
#12000
0,
0+
1*
b1100 !
b1100 &
b1100 -
1)
1"
#14000
1/
11
03
b1011 %
b1011 (
b100 !
b100 &
b100 -
0)
0.
00
12
0"
b100 #
b100 $
b100 '
#16000
1,
1+
0*
b1011 !
b1011 &
b1011 -
1)
1"
#18000
b1010 !
b1010 &
b1010 -
0,
0/
b1010 %
b1010 (
1.
1"
b101 #
b101 $
b101 '
#20000
1/
01
b1001 %
b1001 (
1*
b110 !
b110 &
b110 -
0)
0.
10
0"
b110 #
b110 $
b110 '
#22000
1,
0+
0*
b1001 !
b1001 &
b1001 -
1)
1"
#24000
0/
b1000 %
b1000 (
1+
1*
b111 !
b111 &
b111 -
0)
1.
0"
b111 #
b111 $
b111 '
#26000
0,
0+
0*
b1000 !
b1000 &
b1000 -
1)
1"
#28000
1/
11
13
05
b111 %
b111 (
0.
00
02
14
0"
b1000 #
b1000 $
b1000 '
#30000
1,
1+
1*
b111 !
b111 &
b111 -
0)
1"
#32000
0/
b110 %
b110 (
0+
0*
b1001 !
b1001 &
b1001 -
1)
1.
0"
b1001 #
b1001 $
b1001 '
#34000
0,
1+
1*
b110 !
b110 &
b110 -
0)
1"
#36000
1/
01
b101 %
b101 (
0*
b1010 !
b1010 &
b1010 -
1)
0.
10
0"
b1010 #
b1010 $
b1010 '
#38000
1,
0+
1*
b101 !
b101 &
b101 -
0)
1"
#40000
0/
b100 %
b100 (
1+
0*
b1011 !
b1011 &
b1011 -
1)
1.
0"
b1011 #
b1011 $
b1011 '
#42000
0,
0+
1*
b100 !
b100 &
b100 -
0)
1"
#44000
1/
11
03
b11 %
b11 (
b1100 !
b1100 &
b1100 -
1)
0.
00
12
0"
b1100 #
b1100 $
b1100 '
#46000
1,
1+
0*
b11 !
b11 &
b11 -
0)
1"
#48000
0/
b10 %
b10 (
0+
1*
b1101 !
b1101 &
b1101 -
1)
1.
0"
b1101 #
b1101 $
b1101 '
#50000
0,
1+
0*
b10 !
b10 &
b10 -
0)
1"
#52000
1/
01
b1 %
b1 (
1*
b1110 !
b1110 &
b1110 -
1)
0.
10
0"
b1110 #
b1110 $
b1110 '
#54000
1,
0+
0*
b1 !
b1 &
b1 -
0)
1"
#56000
0/
b0 %
b0 (
1+
1*
b1111 !
b1111 &
b1111 -
1)
1.
0"
b1111 #
b1111 $
b1111 '
#58000
0,
0+
0*
b0 !
b0 &
b0 -
0)
1"
#60000
